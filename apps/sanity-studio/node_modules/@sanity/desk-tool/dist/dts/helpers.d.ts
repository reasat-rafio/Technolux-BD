import { RouterPaneGroup } from './types';
/**
 * @internal
 */
export declare const hasLoading: (panes: any) => any;
/**
 * @internal
 */
export declare const isSaveHotkey: (event: KeyboardEvent) => boolean;
/**
 * @internal
 */
export declare function getPaneDiffIndex(nextPanes: any, prevPanes: any): [number, number] | undefined;
/**
 * @internal
 */
export declare function getIntentRouteParams({ id, type, payloadParams, templateName }: {
    id: any;
    type: any;
    payloadParams: any;
    templateName: any;
}): {
    intent: string;
    params: {
        template?: any;
        type?: any;
        id: any;
    };
    payload: any;
};
/**
 * @internal
 */
export declare function getWaitMessages(path: any): import("rxjs").Observable<string>;
/**
 * @internal
 */
export declare function toState(pathSegment: string): RouterPaneGroup[];
/**
 * @internal
 */
export declare function toPath(panes: RouterPaneGroup[]): string;
/**
 * @internal
 */
export declare function legacyEditParamsToState(params: any): any;
/**
 * @internal
 */
export declare function legacyEditParamsToPath(params: Record<string, unknown>): string;
//# sourceMappingURL=helpers.d.ts.map